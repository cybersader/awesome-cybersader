/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var g=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var v=(n,t,s)=>t in n?g(n,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[t]=s;var x=(n,t)=>{for(var s in t)g(n,s,{get:t[s],enumerable:!0})},L=(n,t,s,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of T(t))!C.call(n,i)&&i!==s&&g(n,i,{get:()=>t[i],enumerable:!(e=A(t,i))||e.enumerable});return n};var F=n=>L(g({},"__esModule",{value:!0}),n);var y=(n,t,s)=>(v(n,typeof t!="symbol"?t+"":t,s),s);var H={};x(H,{default:()=>u});module.exports=F(H);var o=require("obsidian");var c=require("obsidian");var l=class{static formatStepMessage(t,s){return`${s}`}static showProcessingStatus(t,s,e){let i="";t>0&&(i+=`\u5904\u7406\u4E2D\uFF1A${t} \u4E2A\u65B0\u94FE\u63A5`),s>0&&(i+=`${t>0?"\uFF0C":""}${s} \u4E2A\u66F4\u65B0`),new c.Notice(i+"...",e?.timeout)}static showCollisionStatus(t,s){s>0&&new c.Notice(`\u53D1\u73B0 ${s} \u5904\u51B2\u7A81\uFF0C\u6B63\u5728\u89E3\u51B3...`)}static showCollisionWarning(t,s,e){new c.Notice(`\u8B66\u544A\uFF1A\u4ECD\u5B58\u5728 ${t} \u5904\u51B2\u7A81\u3002
\u5EFA\u8BAE\u5C06\u94FE\u63A5\u957F\u5EA6\u4ECE ${s} \u589E\u52A0\u5230 ${e}\uFF0C\u6216\u51CF\u5C11\u6587\u7AE0\u6570\u91CF\u3002`,8e3)}};y(l,"TOTAL_STEPS",2);var p=class{#s;#t;#e;constructor(t,s,e){this.#s=t,this.#t=s,this.#e=e}async buildTaskList(){let t=this.#s.getMarkdownFiles();return await Promise.all(t.map(async e=>{let i=await this.#s.read(e),a=await this.#e(i),r=!!a,h=!!(a&&a.length!==this.#t.hashLength);return{file:e,hasAbbrlink:r,hash:a||void 0,needsLengthUpdate:h}}))}async findHashConflicts(t){let s=new Map;for(let e of t)if(e.hash){let i=s.get(e.hash)||[];i.push(e.file),s.set(e.hash,i)}return Array.from(s.entries()).filter(([e,i])=>i.length>1).map(([e,i])=>({hash:e,files:i}))}filterTasksToProcess(t){return this.#t.skipExisting?t.filter(s=>!s.hasAbbrlink||this.#t.overrideDifferentLength&&s.needsLengthUpdate):t}};async function m(n){let t=new Uint8Array(32);window.crypto.getRandomValues(t);let s=await window.crypto.subtle.digest("SHA-256",t);return Array.from(new Uint8Array(s)).map(a=>a.toString(16).padStart(2,"0")).join("").substring(0,n)}async function P(n,t){if(t.useRandomMode)return await m(t.hashLength);let e=new window.TextEncoder().encode(n),i=await window.crypto.subtle.digest("SHA-256",e);return Array.from(new Uint8Array(i)).map(h=>h.toString(16).padStart(2,"0")).join("").substring(0,t.hashLength)}async function f(n,t){return await P(n.basename,t)}async function b(n,t){let s=n.match(new RegExp(`abbrlink:\\s*([a-fA-F0-9]{${t}})`));return s?s[1]:null}var M={hashLength:8,skipExisting:!0,autoGenerate:!1,useRandomMode:!1,checkCollision:!1,maxCollisionChecks:3,overrideDifferentLength:!1},u=class extends o.Plugin{settings;taskManager;async processFile(t){try{let s=await this.app.vault.read(t);if(await b(s,this.settings.hashLength)&&this.settings.skipExisting)return;let i=await f(t,this.settings);await this.app.fileManager.processFrontMatter(t,a=>{a.abbrlink=i})}catch(s){throw console.error(`Error processing file ${t.path}:`,s),s}}async processFilesWithCollisionCheck(t){let s=0,e=!0,i=[...t];for(;e&&s<this.settings.maxCollisionChecks;){s++;for(let r of i)r.hash||(r.hash=await f(r.file,this.settings));let a=await this.taskManager.findHashConflicts(i);if(a.length===0){await Promise.all(i.map(r=>this.app.fileManager.processFrontMatter(r.file,h=>{h.abbrlink=r.hash}))),e=!1;return}l.showCollisionStatus(s,a.length),await this.resolveConflicts(i),s===this.settings.maxCollisionChecks&&a.length>0&&l.showCollisionWarning(a.length,this.settings.hashLength,Math.min(this.settings.hashLength+4,32))}}async processFilesWithoutCollisionCheck(t){await Promise.all(t.map(s=>this.processFile(s.file)))}async resolveConflicts(t){let s=new Set(t.map(i=>i.hash).filter(Boolean)),e=await this.taskManager.findHashConflicts(t);if(e.length!==0){new o.Notice(`\u53D1\u73B0 ${e.length} \u5904 Abbrlink \u51B2\u7A81\uFF0C\u6B63\u5728\u89E3\u51B3...`);for(let i of e){let a=i.files.sort((r,h)=>r.stat.ctime-h.stat.ctime);for(let r=1;r<a.length;r++){let h=a[r],d;do d=await m(this.settings.hashLength);while(s.has(d));let w=t.find(S=>S.file.path===h.path);w&&(w.hash=d)}}new o.Notice("Abbrlink \u51B2\u7A81\u5DF2\u89E3\u51B3\uFF01")}}async processFiles(){let t=await this.taskManager.buildTaskList(),s=this.taskManager.filterTasksToProcess(t),e=s.filter(a=>!a.hasAbbrlink).length,i=s.filter(a=>a.needsLengthUpdate).length;l.showProcessingStatus(e,i),this.settings.checkCollision?await this.processFilesWithCollisionCheck(s):await this.processFilesWithoutCollisionCheck(s),new o.Notice("\u5B8C\u6210\uFF01")}async onload(){await this.loadSettings(),this.taskManager=new p(this.app.vault,this.settings,t=>b(t,this.settings.hashLength)),this.addRibbonIcon("link","Generate Abbrlinks",async()=>{try{await this.processFiles()}catch(t){new o.Notice("Error generating abbrlinks!"),console.error(t)}}),this.addSettingTab(new k(this.app,this)),this.registerEvent(this.app.vault.on("create",async t=>{if(this.settings.autoGenerate&&t instanceof o.TFile&&t.extension==="md"){let s=this.settings.useRandomMode;this.settings.useRandomMode=!0,await this.processFile(t),this.settings.useRandomMode=s}}))}onunload(){}async loadSettings(){this.settings=Object.assign({},M,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},k=class extends o.PluginSettingTab{plugin;constructor(t,s){super(t,s),this.plugin=s}display(){let{containerEl:t}=this;t.empty(),new o.Setting(t).setName("Abbrlink Length").setDesc("Abbrlink \u7684\u957F\u5EA6 (1-32)\u3002\u5982\u679C\u7ECF\u5E38\u53D1\u751F\u51B2\u7A81\uFF0C\u5EFA\u8BAE\u589E\u52A0 Abbrlink \u957F\u5EA6\u3002\u957F\u5EA6\u8D8A\u957F\uFF0C\u53D1\u751F\u51B2\u7A81\u7684\u6982\u7387\u8D8A\u5C0F\u3002").addSlider(s=>s.setLimits(4,32,4).setValue(this.plugin.settings.hashLength).setDynamicTooltip().onChange(async e=>{this.plugin.settings.hashLength=e,await this.plugin.saveSettings()})),new o.Setting(t).setName("\u81EA\u52A8\u5316").setHeading(),new o.Setting(t).setName("\u8DF3\u8FC7\u5DF2\u6709\u94FE\u63A5").setDesc("\u5982\u679C\u6587\u4EF6\u5DF2\u7ECF\u5305\u542B Abbrlink\uFF0C\u5219\u8DF3\u8FC7").addToggle(s=>s.setValue(this.plugin.settings.skipExisting).onChange(async e=>{this.plugin.settings.skipExisting=e,await this.plugin.saveSettings()})),new o.Setting(t).setName("\u81EA\u52A8\u751F\u6210").setDesc("\u4E3A\u65B0\u521B\u5EFA\u7684 Markdown \u6587\u4EF6\u81EA\u52A8\u751F\u6210 Abbrlink").addToggle(s=>s.setValue(this.plugin.settings.autoGenerate).onChange(async e=>{this.plugin.settings.autoGenerate=e,await this.plugin.saveSettings()})),new o.Setting(t).setName("\u9AD8\u7EA7\u9009\u9879").setHeading(),new o.Setting(t).setName("\u968F\u673A\u6A21\u5F0F").setDesc("\u4F7F\u7528\u968F\u673A\u751F\u6210\u7684 SHA256 \u4F5C\u4E3A Abbrlink").addToggle(s=>s.setValue(this.plugin.settings.useRandomMode).onChange(async e=>{this.plugin.settings.useRandomMode=e,await this.plugin.saveSettings()})),new o.Setting(t).setName("\u51B2\u7A81\u68C0\u67E5").setDesc("\u5F53\u68C0\u6D4B\u5230 Abbrlink \u51B2\u7A81\u65F6\uFF0C\u81EA\u52A8\u5207\u6362\u5230\u968F\u673A\u6A21\u5F0F\u91CD\u65B0\u751F\u6210").addToggle(s=>s.setValue(this.plugin.settings.checkCollision).onChange(async e=>{this.plugin.settings.checkCollision=e,await this.plugin.saveSettings()})),new o.Setting(t).setName("\u6700\u5927\u51B2\u7A81\u68C0\u67E5\u6B21\u6570").setDesc("\u5F53\u5F00\u542F\u51B2\u7A81\u68C0\u67E5\u65F6\uFF0C\u6700\u591A\u91CD\u590D\u68C0\u67E5\u7684\u6B21\u6570 (1-10)").addSlider(s=>s.setLimits(1,10,1).setValue(this.plugin.settings.maxCollisionChecks).setDynamicTooltip().onChange(async e=>{this.plugin.settings.maxCollisionChecks=e,await this.plugin.saveSettings()})),new o.Setting(t).setName("\u8986\u76D6\u4E0D\u540C\u957F\u5EA6\u7684\u94FE\u63A5").setDesc("\u5F53\u6587\u4EF6\u7684\u94FE\u63A5\u957F\u5EA6\u4E0E\u5F53\u524D\u8BBE\u7F6E\u4E0D\u4E00\u65F6\uFF0C\u91CD\u65B0\u751F\u6210\u8BE5\u94FE\u63A5").addToggle(s=>s.setValue(this.plugin.settings.overrideDifferentLength).onChange(async e=>{this.plugin.settings.overrideDifferentLength=e,await this.plugin.saveSettings()}))}};

/* nosourcemap */