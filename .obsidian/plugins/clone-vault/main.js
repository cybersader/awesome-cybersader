/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.create;var d=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var V=(s,i)=>{for(var t in i)d(s,t,{get:i[t],enumerable:!0})},y=(s,i,t,e)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of C(i))!D.call(s,n)&&n!==t&&d(s,n,{get:()=>i[n],enumerable:!(e=v(i,n))||e.enumerable});return s};var m=(s,i,t)=>(t=s!=null?w(T(s)):{},y(i||!s||!s.__esModule?d(t,"default",{value:s,enumerable:!0}):t,s)),F=s=>y(d({},"__esModule",{value:!0}),s);var b={};V(b,{default:()=>p});module.exports=F(b);var r=require("obsidian"),a=m(require("fs")),l=m(require("path")),j={defaultVaultLocation:"",foldersToCopy:""},f=class extends r.Modal{constructor(t,e){super(t);this.onSubmit=e,this.vaultName="",this.setTitle("New vault name")}onOpen(){let{contentEl:t}=this;new r.Setting(t).setName("Vault name").addText(e=>e.onChange(n=>{this.vaultName=n})),new r.Setting(t).addButton(e=>e.setButtonText("Create").setCta().onClick(()=>{this.close(),this.onSubmit(this.vaultName)}))}onClose(){this.contentEl.empty()}},p=class extends r.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new h(this.app,this)),this.addCommand({id:"create-new-vault",name:"Create new vault",callback:async()=>{new f(this.app,async e=>{if(!e){new r.Notice("No vault name provided!");return}try{let n=this.app.vault.adapter.getBasePath(),o=l.join(this.settings.defaultVaultLocation,e);await N(n,o),await S(n,o,this.settings.foldersToCopy),new r.Notice(`Vault "${e}" created successfully!`)}catch(n){console.error(n),new r.Notice("Vault creation failed!")}}).open()}})}async onunload(){}async loadSettings(){this.settings=Object.assign({},j,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},h=class extends r.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new r.Setting(t).setName("Default vault location").setDesc("Base folder where new vaults will be created.").addText(e=>e.setPlaceholder("/Users/username/Documents/ObsidianVaults").setValue(this.plugin.settings.defaultVaultLocation).onChange(async n=>{this.plugin.settings.defaultVaultLocation=n,await this.plugin.saveSettings()})),new r.Setting(t).setName("Folders to copy with files").setDesc("Comma or line-separated folder names to copy entirely.").addTextArea(e=>e.setPlaceholder("templates, media, etc.").setValue(this.plugin.settings.foldersToCopy).onChange(async n=>{this.plugin.settings.foldersToCopy=n,await this.plugin.saveSettings()}))}};async function N(s,i){let t=l.join(s,this.app.vault.configDir),e=l.join(i,this.app.vault.configDir);if(!a.existsSync(t))return;a.mkdirSync(i,{recursive:!0}),a.mkdirSync(e,{recursive:!0});let n=a.readdirSync(t);for(let o of n){let c=l.join(t,o),u=l.join(e,o);a.statSync(c).isDirectory()?(a.mkdirSync(u,{recursive:!0}),g(c,u)):a.copyFileSync(c,u)}}function g(s,i){let t=a.readdirSync(s);for(let e of t){let n=l.join(s,e),o=l.join(i,e);a.statSync(n).isDirectory()?(a.mkdirSync(o,{recursive:!0}),g(n,o)):a.copyFileSync(n,o)}}async function S(s,i,t){let e=t.split(/[\n,]+/).map(o=>o.trim()).filter(Boolean),n=a.readdirSync(s,{withFileTypes:!0});for(let o of n){if(!o.isDirectory()||o.name===this.app.vault.configDir)continue;let c=l.join(s,o.name),u=l.join(i,o.name);a.mkdirSync(u,{recursive:!0}),e.includes(o.name)?g(c,u):await S(c,u,t)}}

/* nosourcemap */